generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  email       String       @unique
  password    String
  name        String
  role        Role
  courses     Course[]     @relation("CourseInstructor")
  enrollments Enrollment[]
  submissions Submission[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Course {
  id           Int          @id @default(autoincrement())
  title        String
  description  String
  instructor   User         @relation("CourseInstructor", fields: [instructorId], references: [id])
  instructorId Int
  modules      Module[]
  enrollments  Enrollment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Module {
  id       Int      @id @default(autoincrement())
  title    String
  course   Course   @relation(fields: [courseId], references: [id])
  courseId Int
  lessons  Lesson[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Lesson {
  id          Int          @id @default(autoincrement())
  title       String
  content     String
  module      Module       @relation(fields: [moduleId], references: [id])
  moduleId    Int
  assignments Assignment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Assignment {
  id          Int          @id @default(autoincrement())
  title       String
  description String
  lesson      Lesson       @relation(fields: [lessonId], references: [id])
  lessonId    Int
  submissions Submission[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Submission {
  id           Int        @id @default(autoincrement())
  content      String
  grade        Int?
  assignment   Assignment @relation(fields: [assignmentId], references: [id])
  assignmentId Int
  student      User       @relation(fields: [studentId], references: [id])
  studentId    Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Enrollment {
  id       Int    @id @default(autoincrement())
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  course   Course @relation(fields: [courseId], references: [id])
  courseId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  ADMIN
  INSTRUCTOR
  STUDENT
}
